variables:
  DOCKER_REGISTRY: docker-dev-snapshot-local.logistics.corp
  ELASSANDRA_VERSION: 6.2.3.40
  GIT_SUBMODULE_STRATEGY: recursive

stages:
 - build
 - publish

# Download Elassandra debian package from the elassandra repo.
#download:
#  stage: download
#  image: curlimages/curl:latest
#  script:
#    - |
#      curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" "https://gitlab.logistics.corp/api/v4/projects/8319/packages/elassandra-${ELASSANDRA_VERSION}.deb" -o "elassandra-${ELASSANDRA_VERSION}.deb"
#  artifacts:
#    paths:
#      - elassandra-${ELASSANDRA_VERSION}.deb
#  tags:
#    - k8s-iah-east

#
# NOTE: Because the download is not possible, this step rebuilds the elassandra debian package.
# (Could be removed once the download step works properly).
#
build:
  stage: build
  image: docker-dev-snapshot-local.logistics.corp/strapdata/elassandra_builder:latest
  variables:
    GRADLE_OPTS: >-
      -Dhttps.proxyHost=iahlproxy.logistics.corp
      -Dhttps.proxyPort=3128
      -Dhttp.proxyHost=iahlproxy.logistics.corp
      -Dhttp.proxyPort=3128
      -Dhttp.nonProxyHosts="localhost|*.logistics.corp|*.kdc.logistics.corp|*.cevalogistics.com"
    ANT_OPTS: >-
      -Dhttps.proxyHost=iahlproxy.logistics.corp
      -Dhttps.proxyPort=3128
      -Dhttp.proxyHost=iahlproxy.logistics.corp
      -Dhttp.proxyPort=3128
      -Dhttp.nonProxyHosts="localhost|*.logistics.corp|*.kdc.logistics.corp|*.cevalogistics.com"
    GRADLE_RELEASE: -Dbuild.snapshot=false
    ANT_RELEASE: -Drelease=true
  before_script:
    - keytool -import -noprompt -trustcacerts -alias cevaroot -file /logistics-corp.pem -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit
  script:
    - (cd elassandra/server/cassandra; ant -autoproxy jar $ANT_RELEASE)
    - cp elassandra/server/cassandra/settings.xml $HOME/.m2/
    - (cd elassandra/server/cassandra; ant mvn-install $ANT_RELEASE)
    - (cd elassandra/server/cassandra; ant stress-build)
    - (cd elassandra; JAVA_HOME=$JAVA9_HOME ./gradlew $GRADLE_OPTS assemble $GRADLE_RELEASE)
    - ls -lrt elassandra/distribution/deb/build/distributions
  artifacts:
    paths:
      - elassandra/distribution/tar/build/distributions
      - elassandra/distribution/zip/build/distributions
      - elassandra/distribution/deb/build/distributions
  tags:
    - k8s-iah-east

# Publish the Elassandra Enterprise docker image into the artifactory.
publish:
  stage: publish
  needs:
  - job: build
    artifacts: true
  image: docker-dev-snapshot-local.logistics.corp/strapdata/elassandra_builder:latest
  variables:
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    DOCKER_HOST: "tcp://docker:2376"
    DOCKER_DRIVER: overlay2
    DOCKER_BUILD_OPTS: --network host --build-arg no_proxy=${no_proxy} --build-arg http_proxy=${http_proxy} --build-arg https_proxy=${https_proxy} --rm
  services:
   - name: docker:dind
     alias: docker
     command: ["--mtu=1440","--insecure-registry=docker-dev-snapshot-local.logistics.corp","--insecure-registry=docker-dev-local.logistics.corp"]
     variables:
       http_proxy: http://iahlproxy.logistics.corp:3128
       https_proxy: http://iahlproxy.logistics.corp:3128
       no_proxy: "localhost,docker,.logistics.corp"
  before_script:
    - mkdir -p $HOME/.docker/
    - cp logistics-corp.pem $HOME/.docker/ca.pem
    - 'echo "{ \"proxies\": { \"default\": { \"httpProxy\": \"http://iahlproxy.logistics.corp:3128\", \"httpsProxy\": \"http://iahlproxy.logistics.corp:3128\", \"noProxy\": \".logistics.corp,docker\" } } }" > $HOME/.docker/config.json'
  script:
    - ls -lrt elassandra/distribution/deb/build/distributions
    - docker login -u $DOCKER_USERNAME -p "$DOCKER_PASSWORD" docker-dev-snapshot-local.logistics.corp
    - BASE_IMAGE_TAG=${ELASSANDRA_VERSION} PACKAGE_LOCATION=elassandra/distribution/deb/build/distributions/elassandra-${ELASSANDRA_VERSION}.deb DOCKER_PUBLISH=true ./build.sh
  tags:
    - k8s-iah-east
